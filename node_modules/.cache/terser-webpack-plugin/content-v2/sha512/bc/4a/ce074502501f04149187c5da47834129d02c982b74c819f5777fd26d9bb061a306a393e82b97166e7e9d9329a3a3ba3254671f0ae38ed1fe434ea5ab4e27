{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{212:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"定时任务\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定时任务\"}},[t._v(\"#\")]),t._v(\" 定时任务\")]),t._v(\" \"),a(\"p\",[t._v(\"CatchAdmin 基于 Pcntl 开发了多进程管理，支持的定时任务处理。可以替代 Crontab。那为什么要舍弃 Crontab 用上自带的这个服务呢。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"基于后台面板管理可控\")]),t._v(\" \"),a(\"li\",[t._v(\"随时可以查看任务执行的情况\")]),t._v(\" \"),a(\"li\",[t._v(\"多进程处理性能高，占用服务器资源少\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"配置\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置\"}},[t._v(\"#\")]),t._v(\" 配置\")]),t._v(\" \"),a(\"p\",[t._v(\"在 \"),a(\"code\",[t._v(\"config/catch.php\")]),t._v(\" 配置文件中，新增了 \"),a(\"code\",[t._v(\"crontab\")]),t._v(\" 配置。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'crontab'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n         * 存储目录\\n         */\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'store_path'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"runtime_path\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'catch/crontab'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n         * 主进程 pid 存储\\n         */\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'master_pid_file'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"runtime_path\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'catch/crontab'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'master.pid'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n         * 日志配置\\n         */\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'log'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 日志记录方式\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'type'\")]),t._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'File'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 日志保存目录\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'path'\")]),t._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"runtime_path\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'catch/schedule'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 单文件日志写入\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'single'\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean constant\"}},[t._v(\"false\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 独立日志级别\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'apart_level'\")]),t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 最大日志文件数量\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'max_files'\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 使用JSON格式记录\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'json'\")]),t._v(\"           \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean constant\"}},[t._v(\"false\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 日志处理\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'processor'\")]),t._v(\"      \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 关闭通道日志写入\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'close'\")]),t._v(\"          \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean constant\"}},[t._v(\"false\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 日志输出格式化\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'format'\")]),t._v(\"         \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'[%s][%s] %s'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 是否实时写入\")]),t._v(\"\\n            \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'realtime_write'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean constant\"}},[t._v(\"false\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n         * crontab 任务命名空间\\n         */\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'task_namespace'\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"''\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\")])])]),a(\"h2\",{attrs:{id:\"使用参数\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用参数\"}},[t._v(\"#\")]),t._v(\" 使用参数\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"必选 \"),a(\"code\",[t._v(\"action\")]),t._v(\": [start|stop|reload|restart] 具体功能看下面\")]),t._v(\" \"),a(\"li\",[t._v(\"可选 \"),a(\"code\",[t._v(\"-d\")]),t._v(\" 是否以守护进程模式运行\")]),t._v(\" \"),a(\"li\",[t._v(\"可选 \"),a(\"code\",[t._v(\"-p\")]),t._v(\" 进程 PID\")]),t._v(\" \"),a(\"li\",[t._v(\"可选 \"),a(\"code\",[t._v(\"-s\")]),t._v(\" 静态进程数量\")]),t._v(\" \"),a(\"li\",[t._v(\"可选 \"),a(\"code\",[t._v(\"-dy\")]),t._v(\" 动态进程数量\")]),t._v(\" \"),a(\"li\",[t._v(\"可选 \"),a(\"code\",[t._v(\"-i\")]),t._v(\" alarm 间隔(s)\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"启动\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#启动\"}},[t._v(\"#\")]),t._v(\" 启动\")]),t._v(\" \"),a(\"p\",[t._v(\"启动任务管理, \"),a(\"code\",[t._v(\"-d\")]),t._v(\" 选项是启动守护进程模式\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\"php think \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"crontab start \\n\")])])]),a(\"h4\",{attrs:{id:\"查看状态\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看状态\"}},[t._v(\"#\")]),t._v(\" 查看状态\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\"php think \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"crontab status\\n\")])])]),a(\"h4\",{attrs:{id:\"关闭\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关闭\"}},[t._v(\"#\")]),t._v(\" 关闭\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\"php think \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"crontab stop\\n\")])])]),a(\"h4\",{attrs:{id:\"重启子进程\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重启子进程\"}},[t._v(\"#\")]),t._v(\" 重启子进程\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\"php think \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"crontab reload\\n\")])])]),a(\"h4\",{attrs:{id:\"重启启动\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重启启动\"}},[t._v(\"#\")]),t._v(\" 重启启动\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[t._v(\"php think \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"catch\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"crontab restart\\n\")])])]),a(\"h2\",{attrs:{id:\"开发-task\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#开发-task\"}},[t._v(\"#\")]),t._v(\" 开发 Task\")]),t._v(\" \"),a(\"p\",[t._v(\"在任意目录都可建立你的 Task 目录.我们就以熟悉的 \"),a(\"code\",[t._v(\"app\")]),t._v(\" 为例。建立 TestTask。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"cd app && mkdir task && touch TestTask.php\\n\")])])]),a(\"p\",[t._v(\"然后输入内容\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-php extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-php\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"namespace\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token package\"}},[t._v(\"app\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"task\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 必须要继承的基类\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"use\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token package\"}},[t._v(\"catcher\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"base\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"\\\\\")]),t._v(\"CatchCronTask\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Test\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"extends\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"CatchCronTask\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 这里是真正处理的地方\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"deal\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// TODO: Implement deal() method.\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sleep\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"file_put_contents\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"root_path\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'test.txt'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token single-quoted-string string\"}},[t._v(\"'执行成功了吗'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 如果出现错误或者异常，可以在这里处理\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"dealWithException\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"\\\\\"),a(\"span\",{pre:!0,attrs:{class:\"token package\"}},[t._v(\"Throwable\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$e\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// TODO: Implement dealWithException() method.\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\")])])]),a(\"p\",[t._v(\"然后要设置配置，在 \"),a(\"code\",[t._v(\"config/catch.php\")]),t._v(\" 的 \"),a(\"code\",[t._v(\"crontab\")]),t._v(\" 配置中 \"),a(\"code\",[t._v(\"task_namespace\")]),t._v(\" 配置命名空间 \"),a(\"code\",[t._v(\"\\\\\\\\app\\\\\\\\task\")])]),t._v(\" \"),a(\"p\",[t._v(\"这样还不够。在后台需要添加你的 task 任务\\n\"),a(\"a\",{attrs:{href:\"https://imgchr.com/i/whcbXd\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a(\"img\",{attrs:{src:\"https://s1.ax1x.com/2020/09/18/whcbXd.jpg\",alt:\"whcbXd.jpg\"}}),a(\"OutboundLink\")],1),t._v(\"\\n首先按照上图开启你的系统监控模块\\n\"),a(\"a\",{attrs:{href:\"https://imgchr.com/i/whg0ud\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a(\"img\",{attrs:{src:\"https://s1.ax1x.com/2020/09/18/whg0ud.jpg\",alt:\"whg0ud.jpg\"}}),a(\"OutboundLink\")],1),t._v(\"\\n开启之后如上图，添加你的任务，cron 表达式就是正常的定时任务,如下设置\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"// cron 表达式\\n *    *    *    *    *\\n -    -    -    -    -\\n |    |    |    |    |\\n |    |    |    |    |\\n |    |    |    |    +----- day of week (0 - 6) (Sunday=0)\\n |    |    |    +---------- month (1 - 12)\\n |    |    +--------------- day of month (1 - 31)\\n |    +-------------------- hour (0 - 23)\\n +------------------------- min (0 - 59)\\n\")])])]),a(\"p\",[t._v(\"调用的任务类设置 \"),a(\"code\",[t._v(\"TestTask\")]),t._v(\" 就完成了。感兴趣的话，就赶快试一试吧。\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}